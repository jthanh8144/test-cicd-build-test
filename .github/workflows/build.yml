# name: CI/CD

# on:
#   push:
#     branches:
#       - "**"

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Create environment file
#         run: |
#           cp example.env .env
#           echo AI_API_SERVER=${{ secrets.AI_API_SERVER }} >> .env
#           echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> .env
#           echo AWS_BUCKET=${{ secrets.AWS_BUCKET }} >> .env
#           echo AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} >> .env
#           echo GG_API_KEY=${{ secrets.GG_API_KEY }} >> .env
#           cat .env

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_SECRET }}
      
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Cache Docker Image Layers
#         uses: actions/cache@v3
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Build and push
#         uses: docker/build-push-action@v3
#         id: docker_build
#         with:
#           context: ./
#           file: ./Dockerfile
#           builder: ${{ steps.buildx.outputs.name }}
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-cicd
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache
#           platforms: linux/amd64,linux/arm64,linux/arm/v7

#       - name: Verify
#         run: echo ${{ steps.docker_build.outputs.digest }}

#       - name: SSH to server
#         uses: appleboy/ssh-action@v0.1.6
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USER }}
#           key: ${{ secrets.SSH_KEY }}
#           script: |
#             cd cicd
#             ./test.sh
